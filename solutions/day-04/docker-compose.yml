version: "3.9"

services:

  nginx-proxy:
    image: nginxproxy/nginx-proxy:alpine
    restart: always
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - webproxy

  web:
    build:
      context: web
    command: npm start
    depends_on:
      - api
      - nginx-proxy
    volumes:
      - ./web:/app
    networks:
      - webproxy
    ports:
      - 3000:3000
    environment:
      - PORT=3000
      - VIRTUAL_PORT=3000
      - VIRTUAL_HOST=web.docker

  api:
    build:
      context: api
    command: npm run start:dev
    depends_on:
      - mongo
      - nginx-proxy
    volumes:
      - ./api:/app
    networks:
      - webproxy
      - default
    ports:
      - 3010:5000
    environment:
      - PORT=5000
      - DB_TYPE=mongodb
      - DB_HOST=mongo
      - DB_PORT=27017
      - DDB_NAME=database
      - VIRTUAL_PORT=5000
      - VIRTUAL_HOST=api.docker

  mongo:
    image: mongo:latest
    environment:
      - MONGO_INITDB_DATABASE=database
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=super_secret
    volumes:
      - ./docker/mongo/init.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./data/mongo:/data/db
    networks:
      - default
    ports:
      - "27017-27019:27017-27019"

  adminer:
    image: finwo/adminer
    restart: always
    ports:
      - 4000:8080
    depends_on:
      - mongo
    networks:
      - webproxy
      - default
    environment:
      - VIRTUAL_PORT=8080
      - VIRTUAL_HOST=adminer.docker

networks:
  default:
  webproxy:
